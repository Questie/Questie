name: CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:

jobs:
  lua-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Install and run Luacheck
        uses: nebularg/actions-luacheck@v1
        with:
          files: Database Localization Modules Questie.lua
          args: "--no-color -q"

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

  validate-era-db:
    needs: lua-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Validate Era database
        run: |
          luarocks install bit32
          lua cli/validate-era.lua

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

  validate-sod-db:
    needs: lua-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Validate SoD database
        run: |
          luarocks install bit32
          lua cli/validate-sod.lua

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

  validate-tbc-db:
    needs: lua-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Validate TBC database
        run: |
          luarocks install bit32
          lua cli/validate-tbc.lua

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

  validate-wotlk-db:
    needs: lua-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Validate WotLK database
        run: |
          luarocks install bit32
          lua cli/validate-wotlk.lua

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

  publish:
    needs: [
      validate-era-db, validate-sod-db, validate-tbc-db, validate-wotlk-db]
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}

    steps:
      - name: Clone project
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - name: Generate Changelog
        id: changelog
        run: python changelog.py >> CHANGELOG.md

      - name: Build ZIP
        run: python build.py -r

      - name: Create GitHub release
        run: >
          gh release create ${{github.ref_name}}
          --verify-tag
          -F CHANGELOG.md
          releases/${{github.ref_name}}/Questie-${{github.ref_name}}.zip
          releases/${{github.ref_name}}/release.json

      - name: Upload CurseForge
        run: sh upload-cf.sh ${{github.ref_name}}

      - name: Upload WAGO
        run: sh upload-wago.sh ${{github.ref_name}}
