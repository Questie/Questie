name: CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - name: Install Lua
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "5.1"

      - name: Install and run Luacheck
        uses: nebularg/actions-luacheck@v1
        with:
          files: Database Localization Modules/Auto Modules/FramePool Modules/Journey Modules/Libs/QuestieCombatQueue.lua Modules/Libs/QuestieCompress.lua Modules/Libs/QuestieHash.lua Modules/Libs/QuestieLib.lua Modules/Libs/QuestieLoader.lua Modules/Libs/QuestieSerializer.lua Modules/Map Modules/Network Modules/Options Modules/QuestLinks Modules/Tooltips Modules/Tracker Modules/Migration.lua Modules/MinimapIcon.lua Modules/QuestieAnnounce.lua Modules/QuestieCleanup.lua Modules/QuestieCoordinates.lua Modules/QuestieDBMIntegration.lua Modules/QuestieEventHandler.lua Modules/QuestieInit.lua Modules/QuestieMenu.lua Modules/QuestieNameplate.lua Modules/QuestiePlayer.lua Modules/QuestieProfessions.lua Modules/QuestieProfiler.lua Modules/QuestieReputation.lua Modules/QuestieSlash.lua Modules/QuestieStream.lua Modules/TaskQueue.lua Modules/VersionCheck.lua Questie.lua
          args: "--no-color -q"

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4.0.0

      - name: Validate Questie database
        run: |
          luarocks install bit32
          lua cli.lua

      - name: Setup Python
        uses: actions/setup-python@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          python-version: 3.8

      - name: Build changelog and project
        if: ${{ github.event_name != 'pull_request' }}
        run: python changelog.py && python build.py

      - name: Send CI failure to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
        if: ${{ failure() }}

#      - name: Create Package
#        uses: BigWigsMods/packager@master
#        if: ${{ github.event_name != 'pull_request' }}
#        with:
#          args: -g classic
#        env:
#          CF_API_KEY: ${{ secrets.CF_API_KEY }}
#          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
#          WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
#          WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
